{"version":3,"file":"static/js/58.aafc2445.chunk.js","mappings":"qQACA,EAAgC,qC,UCOnBA,EAAgB,WACzB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,GAEzB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBH,SAAA,CACb,IAAhBL,EAAKS,SAAgBN,EAAAA,EAAAA,KAACO,EAAAA,EAAY,CAACC,KAAMC,EAAAA,IACzCZ,EAAKa,KAAI,SAAAC,GAAG,OAAIX,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAAcD,IAAKA,GAAbA,EAAIE,GAAgB,QAIpE,ECIA,EAhBsB,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,OACTH,GAASI,EAAAA,EAAAA,KAAY,IACrBJ,GAASK,EAAAA,EAAAA,GAAU,CAAEC,KAAM,IAC7B,GAAG,CAACN,KAGFd,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACJ,EAAa,KAGpB,C,wDCpBO,IAkBIyB,EAAS,WAAH,IAAIC,EAAIC,UAAAjB,OAAA,QAAAkB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BE,OAAOC,gBAAgB,IAAIC,WAAWL,IAAOM,QAAO,SAACf,EAAIgB,GAWvD,OAREhB,IAFFgB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,C","sources":["webpack://react-homework-template/./src/components/FavoritesList/FavoritesList.module.css?a2e5","components/FavoritesList/FavoritesList.jsx","pages/Favorites/FavoritesPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listContainer\":\"FavoritesList_listContainer__F56f5\"};","import { useSelector } from 'react-redux';\nimport { CarsItem } from 'components/CarsItem/CarsItem';\nimport { getFavorites } from 'redux/favorites/favoritesSelectors';\nimport { NotFoundItem } from 'components/NotFoundItem/NotFoundItem';\nimport { FAVORITES_IS_EMPTY } from 'constants/messages';\n\nimport css from './FavoritesList.module.css';\n\nexport const FavoritesList = () => {\n    const cars = useSelector(getFavorites);\n\n    return (\n        <>\n            <div className={css.listContainer}>\n                {cars.length === 0 && <NotFoundItem text={FAVORITES_IS_EMPTY}/>}\n                {cars.map(car => <CarsItem key={car.id} car={car} />)}\n            </div>\n        </>\n    )\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setCarsEmpty, setLoadMore } from 'redux/cars/carsActions';\nimport { setFilter } from 'redux/filters/filtersAction';\nimport { FavoritesList } from 'components/FavoritesList/FavoritesList';\n\n\nconst FavoritesPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setCarsEmpty());\n    dispatch(setLoadMore(false));\n    dispatch(setFilter({ page: 1 }));\n  }, [dispatch]);\n\n  return (\n    <>\n      <FavoritesList />\n    </>\n  );\n};\n\nexport default FavoritesPage\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["FavoritesList","cars","useSelector","getFavorites","_jsx","_Fragment","children","_jsxs","className","css","length","NotFoundItem","text","FAVORITES_IS_EMPTY","map","car","CarsItem","id","dispatch","useDispatch","useEffect","setCarsEmpty","setLoadMore","setFilter","page","nanoid","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}